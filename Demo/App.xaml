<Application x:Class="Demo.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             x:Name="App" StartupUri="NiceControlStation.xaml">
    <Application.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Colours.xaml" />
                <ResourceDictionary Source="/MahApps.Metro;component/Themes/MenuButton.xaml"/>
                <ResourceDictionary Source="IconButton.xaml"/>
            </ResourceDictionary.MergedDictionaries>
        	<SolidColorBrush x:Key="AnalysisColor" Color="#FF1141EE"/>
        	<Style x:Key="squareButtonStyle" TargetType="{x:Type Button}">
        		<Setter Property="MinHeight"
        			Value="10" />
        		<Setter Property="FontWeight"
        			Value="Bold" />
        		<Setter Property="FontSize"
        			Value="8" />
        		<Setter Property="FontFamily"
        			Value="{DynamicResource DefaultFont}" />
        		<Setter Property="Background"
        			Value="{DynamicResource GrayBrush7}" />
        		<Setter Property="BorderBrush"
        			Value="{DynamicResource TextBoxBorderBrush}" />
        		<Setter Property="Foreground"
        			Value="{DynamicResource TextBrush}" />
        		<Setter Property="Padding"
        			Value="2,3" />
        		<Setter Property="BorderThickness"
        			Value="1" />
        		<Setter Property="Template">
        			<Setter.Value>
        				<ControlTemplate TargetType="{x:Type Button}">
        					<Grid>
        						<VisualStateManager.VisualStateGroups>
        							<VisualStateGroup x:Name="CommonStates">
        								<VisualState x:Name="Normal" />
        								<VisualState x:Name="MouseOver">
        									<Storyboard>
        										<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
        											Storyboard.TargetName="MouseOverBorder">
        											<EasingDoubleKeyFrame KeyTime="0"
        												Value="1" />
        										</DoubleAnimationUsingKeyFrames>
        									</Storyboard>
        								</VisualState>
        								<VisualState x:Name="Pressed">
        									<Storyboard>
        										<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
        											Storyboard.TargetName="PressedBorder">
        											<EasingDoubleKeyFrame KeyTime="0"
        												Value="1" />
        										</DoubleAnimationUsingKeyFrames>
        									</Storyboard>
        								</VisualState>
        								<VisualState x:Name="Disabled">
        									<Storyboard>
        										<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity"
        											Storyboard.TargetName="DisabledVisualElement">
        											<SplineDoubleKeyFrame KeyTime="0"
        												Value="0.7" />
        										</DoubleAnimationUsingKeyFrames>
        										<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
        											Storyboard.TargetName="contentPresenter">
        											<EasingDoubleKeyFrame KeyTime="0"
        												Value="0.3" />
        										</DoubleAnimationUsingKeyFrames>
        									</Storyboard>
        								</VisualState>
        							</VisualStateGroup>
        							<VisualStateGroup x:Name="FocusStates">
        								<VisualState x:Name="Focused">
        									<Storyboard>
        										<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
        											Storyboard.TargetName="FocusRectangle">
        											<EasingDoubleKeyFrame KeyTime="0"
        												Value="1" />
        										</DoubleAnimationUsingKeyFrames>
        										<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
        											Storyboard.TargetName="FocusInnerRectangle">
        											<EasingDoubleKeyFrame KeyTime="0"
        												Value="1" />
        										</DoubleAnimationUsingKeyFrames>
        									</Storyboard>
        								</VisualState>
        								<VisualState x:Name="Unfocused" />
        							</VisualStateGroup>
        						</VisualStateManager.VisualStateGroups>
        						<Border x:Name="Background"
        							BorderBrush="{TemplateBinding BorderBrush}"
        							BorderThickness="{TemplateBinding BorderThickness}"
        							Background="{TemplateBinding Background}"
        							CornerRadius="0" />
        						<Rectangle x:Name="DisabledVisualElement"
        							Fill="{DynamicResource ControlsDisabledBrush}"
        							IsHitTestVisible="false"
        							Opacity="0"
        							RadiusY="3"
        							RadiusX="3" />
        						<Border x:Name="MouseOverBorder"
        							Background="{DynamicResource GrayBrush8}"
        							BorderThickness="{TemplateBinding BorderThickness}"
        							CornerRadius="3.5"
        							Opacity="0" />
        						<Border x:Name="PressedBorder"
        							Background="{DynamicResource GrayBrush5}"
        							BorderThickness="{TemplateBinding BorderThickness}"
        							CornerRadius="3.5"
        							Opacity="0" />
        						<Rectangle x:Name="FocusRectangle"
        							Stroke="{DynamicResource TextBoxMouseOverInnerBorderBrush}"
        							RadiusY="4"
        							RadiusX="4"
        							Margin="-1"
        							Opacity="0" />
        						<Rectangle x:Name="FocusInnerRectangle"
        							StrokeThickness="{TemplateBinding BorderThickness}"
        							Stroke="{DynamicResource TextBoxMouseOverBorderBrush}"
        							RadiusX="3"
        							RadiusY="3"
        							Opacity="0" />
        						<ContentPresenter x:Name="contentPresenter"
        							ContentTemplate="{TemplateBinding ContentTemplate}"
        							Content="{TemplateBinding Content}"
        							HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
        							Margin="{TemplateBinding Padding}"
        							VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
        					</Grid>
        				</ControlTemplate>
        			</Setter.Value>
        		</Setter>
        	</Style>
        </ResourceDictionary>
    </Application.Resources>
</Application>
